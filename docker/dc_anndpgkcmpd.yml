version: '3.8'

services:
  angularmpd:
    image: i_angularmpd2 # Asegúrate de que esta imagen ya esté construida y disponible localmente o en un registro accesible
    container_name: c_nginx-angmpd2
    ports:
      - "4200:80"

  nodeapp:
    image: i_nodempd # Imagen de tu aplicación Node.js
    container_name: c_nodempd
    build:
      context: .
      dockerfile: src/docker/Dockerfile # Ruta al Dockerfile de tu aplicación
    ports:
      - "3000:3000"
    environment:
      DB_USER: root
      DB_HOST: c_pgsqlmpd # Nombre del servicio de PostgreSQL
      DB_PASSWORD: root
      DB_NAME: root
      DB_SCHEMA: mpd
      DB_PORT: 5432
      KEYCLOAK_URL: http://keycloakmpd:8080 # Nombre del servicio de Keycloak
    depends_on:
      - c_pgsqlmpd
      - keycloakmpd

  c_pgsqlmpd:
    image: postgres
    container_name: c_pgsqlmpd
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: root
    volumes:
      - C:/tmp/docker/pgmpd/data:/var/lib/postgresql/data # Persistencia de datos

  c_pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "sergio.salinasr@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "85:80"
    depends_on:
      - c_pgsqlmpd

  keycloakmpd:
    image: quay.io/keycloak/keycloak:12.0.2
    container_name: keycloakmpd
    ports:
      - "8081:8080"
    restart: unless-stopped
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    volumes:
      - C:/tmp/docker/mpd/keycloak/data:/opt/jboss/keycloak/standalone/data
      - C:/tmp/docker/mpd/keycloak/logs:/opt/jboss/keycloak/standalone/log

# docker compose -f docker/dc_anndpgkcmpd.yml -p dc_anndpgkcmpd up -d
# EN LA CREACIÓN DEL SERVER EN PGADMIN, LA PRIMERA VEZ
# considerar el nombre del host como (contenedor) en este caso: c_pgsqlmpd